#!/bin/sh

# Copyright Â© Alexander Ben Nasrallah 2018 <abn@posteo.de>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.

# Keep in mind where we where. We will need to change the directory to link to files.
CURRENT_WORKING_DIR=$PWD
cd $(dirname $0) # move to directory of this file to keep $BASEDIR and so link names clean.
BASEDIR=$PWD/

# Check if file $1 exists and
# - deletes if it is a link
# - mv to $1.bkp for files and directories
#   deletes exisitng $1.bkp
backupExistingFile () {
	file=$1
	if test -z $file; then
		return
	fi
	if test -h $file; then
		#echo "Delete old link $file."
		rm $file
	else
		#echo "Backing up $file."
		if test -e $file ; then
			#echo "Create backup for existing file $file."
			backupFile=${file}.bkp
			rm -rf $backupFile
			mv $file $backupFile
		fi
	fi
}

DOTFILES=${DOTFILES:-$*}
# If no $DOTFILES are specified install all *.symlinks
if test -z "$DOTFILES"; then
	DOTFILES=$(find . -name "*.symlink" | sed 's+^\./++' | grep -v '^vim\.symlink/..*' | xargs)
fi
echo Linking dotfiles: $DOTFILES

for dotfile in $DOTFILES; do
	if test -e $dotfile; then # User might have specified non exising files
		link_name=$HOME/.${dotfile%.symlink}
		backupExistingFile $link_name
		# if dotfile is in a subdirectory we might have to create it:
		mkdir -p $(dirname $link_name) # if no subdirecoty is used this will create $HOME, so what.
		dotfile=$BASEDIR$dotfile
		ln -s $dotfile $link_name
	else
		echo $dotfile not found.
	fi
done

cd $CURRENT_WORKING_DIR

test -d $HOME/.vim/backup || mkdir -p $HOME/.vim/backup
test -d $HOME/.vim/swap || mkdir -p $HOME/.vim/swap
test -d $HOME/.vim/undo || mkdir -p $HOME/.vim/undo
